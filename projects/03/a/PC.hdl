// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux16 (a=outPast, b=false, sel=reset, out=outMux1);
    Not(in=reset, out=notReset);
    And(a=load, b=notReset, out=loadInSel);
    Mux16 (a=outMux1, b=in, sel=loadInSel, out=outMux2);
    Inc16 (in=outPast, out=outPastIncremented);
    And (a=inc, b=load, out=incAndLoad);
    Or (a=incAndLoad, b=load, out=loadSel);
    Or (a=loadSel, b=reset, out=finalSel);
    Mux16 (a=outPastIncremented, b=outMux2, sel=finalSel, out=outNext);
    Or (a=inc, b=load, out=incOrLoad);
    Or (a=incOrLoad, b=reset, out=finalOr);
    Register (in=outNext, load=finalOr, out=outPast, out=out);
}
