class Renderer {
    field Array squareGrid;
    field GameState gameState;
    field int rows, cols;

    constructor Renderer new(GameState aGameState) {
        var int i, j;
        var Array tempRow;
        var Square tempSquare;
        
        let gameState = aGameState;
        let rows = gameState.rows();
        let cols = gameState.cols();
        let squareGrid = Array.new(rows);
        
        let i = 0;
        while (i < rows) {
            let squareGrid[i] = Array.new(cols);
            let tempRow = squareGrid[i];
            let j = 0;
            while (j < cols) {
                let tempRow[j] = Square.new(i, j, 5);
                let j = j + 1;
            }
            let squareGrid[i] = tempRow;
        
            let i = i + 1;
        }
        return this;
    }

    method void render() {
        var int i, j, cellState;
        var Array tempRow;
        var Square tempSquare;
        
        let i = 0;
        while (i < rows) {
            let tempRow = squareGrid[i];
            let j = 0;
            while (j < cols) {
                let tempSquare = tempRow[j];
                let cellState = gameState.getCell(i, j);
                if (cellState = 1) {
                    do tempSquare.draw();
                    do Sys.wait(200);
                } else {
                    do tempSquare.erase();
                }
                let j = j + 1;
            }
            let i = i + 1;
        }
        return;
    }
}

